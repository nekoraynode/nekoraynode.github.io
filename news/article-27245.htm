<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://nekoraynode.github.io/news/article-27245.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>java springMVC之@RequestMapping注解</title>
        <meta name="description" content="目录 @RequestMapping注解 注解标识位置 value属性 method属性 params属性 headers属性 ant风格路径 路径占位符   @RequestMapping注解的作用" />
        <link rel="icon" href="/assets/website/img/nekoraynode/favicon.ico" type="image/x-icon"/>
    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@500;600;700&family=Rubik:wght@400;500&display=swap" rel="stylesheet">
    <!-- Icon Font Stylesheet -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" />
    <!-- Libraries Stylesheet -->
    <link href="__ADDON__/js/frontend/nekoraynode/lightbox/css/lightbox.min.css" rel="stylesheet">
    <!-- Customized Bootstrap Stylesheet -->
    <link href="/assets/website/css/nekoraynode/bootstrap.min.css" rel="stylesheet">
    <!-- Template Stylesheet -->
    <link href="/assets/website/css/nekoraynode/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-E6TD6QHWW6"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-E6TD6QHWW6');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!-- Spinner Start -->
    <div id="spinner" class="show bg-white position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center">
        <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
    <!-- Spinner End -->
    <!-- Navbar & Hero Start -->
    <div class="container-fluid p-0">
                <nav class="navbar navbar-expand-lg fixed-top navbar-light px-4 px-lg-5 py-3 py-lg-0">
            <a href="/" class="navbar-brand p-0">
                                <span class="display-6 text-primary m-0">
                    <i class="fas fa-envelope me-3"></i>NekoRay Node
                </span>
                            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse">
                <span class="fa fa-bars"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarCollapse">
                <div class="navbar-nav ms-auto py-0">
                                        <a href="/" class="nav-item nav-link">首页</a>
                                        <a href="/free-nodes/" class="nav-item nav-link">免费节点</a>
                                        <a href="/paid-subscribe/" class="nav-item nav-link">推荐机场</a>
                                        <a href="/news/" class="nav-item nav-link">新闻资讯</a>
                                        <a href="#" class="nav-item nav-link">关于</a>
                    <a href="#" class="nav-item nav-link">联系</a>
                </div>
            </div>
        </nav>
    </div>
    <!-- Navbar & Hero End -->
    <!-- Header Start -->
    <div class="container-fluid bg-breadcrumb">
        <ul class="breadcrumb-animation">
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
        </ul>
        <div class="container text-center py-5" style="max-width: 900px;">
            <h3 class="display-3 mb-4 wow fadeInDown" data-wow-delay="0.1s">java springMVC之@RequestMapping注解</h1>
                <ol class="breadcrumb justify-content-center mb-0 wow fadeInDown" data-wow-delay="0.3s">
                    <li class="breadcrumb-item"><a href="/">首页</a></li>
                    <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                    <li class="breadcrumb-item active text-primary">正文</li>
                </ol>
        </div>
    </div>
    <!-- Header End -->
    <!-- About Start -->
    <div class="container-fluid py-5">
        <div class="container py-5">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <p id="main-toc"><strong>目录</strong></p> <p id="main-toc-toc" style="margin-left:0px;"><a href="#main-toc" rel="nofollow">@RequestMapping注解</a></p> <p id="%E6%B3%A8%E8%A7%A3%E6%A0%87%E8%AF%86%E4%BD%8D%E7%BD%AE-toc" style="margin-left:40px;"><a href="#%E6%B3%A8%E8%A7%A3%E6%A0%87%E8%AF%86%E4%BD%8D%E7%BD%AE" rel="nofollow">注解标识位置</a></p> <p id="value%E5%B1%9E%E6%80%A7-toc" style="margin-left:40px;"><a href="#value%E5%B1%9E%E6%80%A7" rel="nofollow">value属性</a></p> <p id="method%E5%B1%9E%E6%80%A7-toc" style="margin-left:40px;"><a href="#method%E5%B1%9E%E6%80%A7" rel="nofollow">method属性</a></p> <p id="params%E5%B1%9E%E6%80%A7-toc" style="margin-left:40px;"><a href="#params%E5%B1%9E%E6%80%A7" rel="nofollow">params属性</a></p> <p id="headers%E5%B1%9E%E6%80%A7-toc" style="margin-left:40px;"><a href="#headers%E5%B1%9E%E6%80%A7" rel="nofollow">headers属性</a></p> <p id="springMVC%E6%94%AF%E6%8C%81ant%E9%A3%8E%E6%A0%BC%E8%B7%AF%E5%BE%84-toc" style="margin-left:40px;"><a href="#springMVC%E6%94%AF%E6%8C%81ant%E9%A3%8E%E6%A0%BC%E8%B7%AF%E5%BE%84" rel="nofollow">ant风格路径</a></p> <p id="%E8%B7%AF%E5%BE%84%E5%8D%A0%E4%BD%8D%E7%AC%A6-toc" style="margin-left:40px;"><a href="#%E8%B7%AF%E5%BE%84%E5%8D%A0%E4%BD%8D%E7%AC%A6" rel="nofollow">路径占位符</a></p> <hr id="hr-toc"/> </h1> <p><strong>@RequestMapping注解的作用就是将请求和处理请求的控制器方法关联起来，建立映射关系。 SpringMVC接收到指定的请求，就会来找到在映射关系中对应的控制器方法来处理这个请求。</strong></p> <h2 id="%E6%B3%A8%E8%A7%A3%E6%A0%87%E8%AF%86%E4%BD%8D%E7%BD%AE"><strong>注解标识位置</strong></h2> <p><strong>（1）</strong>@RequestMapping标识一个类：设置映射请求的请求路径的初始信息。</p> <p><strong>（2）</strong>@RequestMapping标识一个方法：设置映射请求请求路径的具体信息。</p> <p><strong>标识在方法上时</strong></p> <pre><code>@Controller //@RequestMapping(value = "/web") public class RequestMappingController {      @RequestMapping(value = "/testRequestMapping")     public String testRequestMapping() {         //返回的字符串是去掉视图前缀和后缀的文件名         //比如说在某一路径下的test.html文件，只需要返回test即可跳转到该页面         //在springMVC.xml配置文件中设置视图前后缀         return "test";     }  }</code></pre> <p>跳转路径设置如下（这里我们使用了thymeleaf来管理路径）</p> <pre><code>&lt;a th:href="@{/testRequestMapping}"&gt;测试RequestMapping注解&lt;/a&gt;&lt;br&gt;</code></pre> <p>跳转结果</p> <p><img fetchpriority="high" decoding="async" alt="" height="123" src="http://img.555519.xyz/uploads3/20220901/9186ce7e0704ce3063af67103ad5486b.jpg"></p> <p>可以看到地址栏和我们设置的value属性一样。</p> <p><strong>&nbsp;标识在类上时</strong></p> <p>如果我们在类上设置一个RequestMapping，及取消上面代码中RequestMapping的注释，那么跳转的地址更改如下</p> <pre><code>&lt;a th:href="@{/web/testRequestMapping}"&gt;测试RequestMapping注解&lt;/a&gt;&lt;br&gt;</code></pre> <p><strong>在类上标记了之后，相当于这一个类中所有的路径前面都加上了类上所标记的路径。</strong></p> <h2 id="value%E5%B1%9E%E6%80%A7">value属性</h2> <p><strong>value属性通过请求的请求地址匹配请求映射</strong>，value属性可以是一个字符串类型的数组，表示该请求映射能够匹配多个请求地址所对应的请求。</p> <pre><code>@RequestMapping(value = {"/testRequestMapping", "/test"})     public String test() {         return "test";     }</code></pre> <p><strong>value的值为多个时，表示从这几个路径都可以访问到这一个页面。</strong></p> <h2 id="method%E5%B1%9E%E6%80%A7"><strong>method属性</strong></h2> <p><strong>method属性通过请求的请求方式（get或post）匹配请求映射</strong>，表示该请求能匹配的请求方式，如果不设置method属性，就表示不以请求方式为访问的限制条件。当满足value属性设置的路径但不满足method设置的请求方式时就会报错。</p> <pre><code>@RequestMapping(value = {"/testRequestMapping", "/test"},         method = {RequestMethod.GET, RequestMethod.POST} ) public String test() {     return "test"; }</code></pre> <h2 id="params%E5%B1%9E%E6%80%A7">params属性</h2> <p><strong>params属性通过请求参数匹配请求映射</strong>，@RequestMapping注解的params属性是一个字符串类型的数组，可以通过四种表达式设置请求参数。</p> <p>（1）"param"：要求请求映射所匹配的请求必须携带param请求参数。</p> <p>（2）"!param"：要求请求映射所匹配的请求必须不能携带param请求参数。</p> <p>（3）"param=value"：要求请求映射所匹配的请求必须携带param请求参数且param=value。</p> <p>（4）"param!=value"：要求请求映射所匹配的请求必须携带param请求参数但是param!=value。</p> <p>例如我们在访问路径上面设置传递过去的访问参数</p> <pre><code>&lt;a th:href="@{/web/testRequestMapping(username='HLJ',password='654321')}"&gt;测试RequestMapping注解false&lt;/a&gt;&lt;br&gt; &lt;a th:href="@{/web/testRequestMapping(username='JLH',password='123456')}"&gt;测试RequestMapping注解true&lt;/a&gt;&lt;br&gt;</code></pre> <p>接收方法如下</p> <pre><code>@RequestMapping(value = {"/testRequestMapping", "/test"},         method = {RequestMethod.GET, RequestMethod.POST},         params = {"username=JLH","password!=654321"} ) public String test() {     return "test"; }</code></pre> <p><strong>这样就表示当username和password都满足条件的时候才会跳转成功。</strong></p> <h2 id="headers%E5%B1%9E%E6%80%A7">headers属性</h2> <p><strong>headers属性通过请求的请求头信息匹配请求映射，</strong>@RequestMapping注解的headers属性是一个字符串类型的数组，可以通过四种表达式设置请求头信息和请求映射的匹配关系。</p> <p>"header"：要求请求映射所匹配的请求必须携带header请求头信息。</p> <p>"!header"：要求请求映射所匹配的请求必须不能携带header请求头信息。</p> <p>"header=value"：要求请求映射所匹配的请求必须携带header请求头信息且header=value。</p> <p>"header!=value"：要求请求映射所匹配的请求必须携带header请求头信息且header!=value。</p> <p>访问地址</p> <pre><code>&lt;a th:href="@{/testParamsAndHeaders}"&gt;测试headers&lt;/a&gt;&lt;br&gt;</code></pre> <p>接收设置</p> <pre><code>@RequestMapping(value = "/testParamsAndHeaders",             headers = {"Host=localhost:8080","Accept-Language=zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6"})     public String testParamsAndHeaders() {         return "test";     }</code></pre> <p>&nbsp;通过查看网页的请求标头可以发现如下信息</p> <p><img decoding="async" alt="" height="164" src="http://img.555519.xyz/uploads3/20220901/6d7ec4245749146ac36f787faa64e3b8.jpg"></p> <p><strong>&nbsp;这里我们通过Host和Accept-Language来设置headers属性进行测试，只要标头的信息和headers中的匹配，就能够访问成功。</strong></p> <h2 id="springMVC%E6%94%AF%E6%8C%81ant%E9%A3%8E%E6%A0%BC%E8%B7%AF%E5%BE%84"><strong>ant风格路径</strong></h2> <p>？：表示任意的单个字符。</p> <p>*：表示任意的0个或多个字符。</p> <p>**：表示任意的一层或多层目录，<strong>在使用**时，只能使用/**/xxx的方式</strong>。</p> <p id="%E6%8E%A5%E6%94%B6%E8%B7%AF%E5%BE%84%E8%AE%BE%E7%BD%AE">接收路径设置</p> <pre><code>@RequestMapping(value = "/a?a/testAnt") public String testAnt1() {     return "test"; }  @RequestMapping(value = "/a*a/testAnt") public String testAnt2() {     return "test"; }  @RequestMapping(value = "/**/testAnt") public String testAnt3() {     return "test"; }</code></pre> <p>访问路径设置</p> <pre><code>&lt;a th:href="@{/a1a/testAnt}"&gt;使用?(一个问号匹配单个字符)&lt;/a&gt;&lt;br&gt; &lt;a th:href="@{/a1123123123a/testAnt}"&gt;使用*(开头和结尾的字符匹配即可)&lt;/a&gt;&lt;br&gt; &lt;a th:href="@{/tqwe/testAnt}"&gt;使用**(多目录都可以，只要最后是testAnt)&lt;/a&gt;&lt;br&gt;</code></pre> <p>因为springMVC支持ant风格的路径，所以上面的路径都能被接收到。</p> <h2 id="%E8%B7%AF%E5%BE%84%E5%8D%A0%E4%BD%8D%E7%AC%A6">路径占位符</h2> <p>当我们要把某些数据通过路径的方式传输到服务器时，原始的方式是/路径?username=123&amp;password=321，而现在可以改写成：/路径/username=123/password=321，并且可以通过在RequestMapping注解的value属性中设置占位符获取传输的数据，通过@PathVariable赋值给形参。</p> <p>访问路径设置</p> <pre><code>&lt;a th:href="@{/testPath/JLH/123456}"&gt;测试占位符&lt;/a&gt;&lt;br&gt;</code></pre> <p>设置占位符</p> <pre><code>@RequestMapping(value = "/testPath/{username}/{password}") public String testPath(@PathVariable("id") Integer id, @PathVariable("username") String username) {     System.out.println("id:" + id);     System.out.println("username:" + username);     return "test"; }</code></pre> <p>这样就可以很容易的获取到通过路径传递过来的参数。</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-26785.htm">猫咪打疫苗要多少钱大概打几针（猫咪打疫苗要多少钱大概打几针呢）</a></p>
                                        <p>下一个：<a href="/news/article-27247.htm">Web前端：JavaScript和Nodejs有什么不同?</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-9-5-node-share.htm" title="「9月5日」最高速度19.3M/S，2024年NekoRay每天更新免费节点订阅链接">「9月5日」最高速度19.3M/S，2024年NekoRay每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-22610.htm" title="太原市免费领养狗狗（太原哪里可以免费领养狗狗）">太原市免费领养狗狗（太原哪里可以免费领养狗狗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-7-linux-nekoray.htm" title="「10月7日」最高速度21.2M/S，2024年NekoRay每天更新免费节点订阅链接">「10月7日」最高速度21.2M/S，2024年NekoRay每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-31-free-nekoray.htm" title="「10月31日」最高速度18M/S，2024年NekoRay每天更新免费节点订阅链接">「10月31日」最高速度18M/S，2024年NekoRay每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-1-nekoray-node.htm" title="「12月1日」最高速度22.7M/S，2024年NekoRay每天更新免费节点订阅链接">「12月1日」最高速度22.7M/S，2024年NekoRay每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-3-free-nekoray.htm" title="「8月3日」最高速度20.2M/S，2024年NekoRay每天更新免费节点订阅链接">「8月3日」最高速度20.2M/S，2024年NekoRay每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-7-30-free-high-speed-nodes.htm" title="「7月30日」最高速度19.5M/S，2024年NekoRay每天更新免费节点订阅链接">「7月30日」最高速度19.5M/S，2024年NekoRay每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-16-windows-nekoray.htm" title="「12月16日」最高速度18.7M/S，2024年NekoRay每天更新免费节点订阅链接">「12月16日」最高速度18.7M/S，2024年NekoRay每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-6-29-free-v2ray-subscribe.htm" title="「6月29日」最高速度23M/S，2024年NekoRay每天更新免费节点订阅链接">「6月29日」最高速度23M/S，2024年NekoRay每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-18724.htm" title="asp+vb.net解决调接口返回中文乱码问题">asp+vb.net解决调接口返回中文乱码问题</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">57</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">4</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
    <!-- About End -->
        <!-- Copyright Start -->
    <div class="container-fluid copyright py-4">
        <div class="container">
            <div class="row g-4 align-items-center">
                <div class="col-md-6 text-center text-md-start mb-md-0">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <span class="text-white">NekoRayNode节点订阅站 版权所有 Powered by WordPress</span>
                </div>
            </div>
        </div>
    </div>
    <!-- Copyright End -->
    <!-- Back to Top -->
    <a href="#" class="btn btn-primary btn-lg-square back-to-top"><i class="fa fa-arrow-up"></i></a>
    <!-- JavaScript Libraries -->
    <script src="https://cdn.bootcdn.net/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/nekoraynode/easing/easing.min.js"></script>
    <script src="/assets/website/js/frontend/nekoraynode/lightbox/js/lightbox.min.js"></script>
    <!-- Template Javascript -->
    <script src="/assets/website/js/frontend/nekoraynode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>